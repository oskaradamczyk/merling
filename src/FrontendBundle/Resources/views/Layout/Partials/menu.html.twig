{% extends 'knp_menu.html.twig' %}

{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% import 'knp_menu.html.twig' as knp_menu %}
        {{ block('children') }}
    {% endif %}
{% endblock %}

{% block children %}
    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = options|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}
    {# update the matchingDepth for children #}
    {% if options.matchingDepth is not none and options.matchingDepth > 0 %}
        {% set options = options|merge({'matchingDepth': currentOptions.matchingDepth - 1}) %}
    {% endif %}
    {% for item in currentItem.children %}
        {{ block('item') }}
    {% endfor %}
    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {% if item.hasChildren and options.depth is not same as(0) %}
            {% import 'knp_menu.html.twig' as knp_menu %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}
        {% import 'knp_menu.html.twig' as knp_menu %}
        {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
            {{ block('linkElement') }}
        {%- else %}
            {{ block('spanElement') }}
        {%- endif %}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
        {% if item.hasChildren and subContainerRendered is not defined %}
            <div class="menu-sub-container">
        {% endif %}
        {#{{ block('list') }}#}
        {% if item.hasChildren and subContainerRendered is not defined %}
            </div>
            {% set subContainerRendered = true %}
        {% endif %}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <div {{ knp_menu.attributes(item.linkAttributes) }}>
        <a href="{{ item.uri }}" title="{{ block('label') }}">
            <span class="helper"></span>
            <span class="text">{{ block('label') }}</span>
        </a>
        {{ block('list') }}
    </div>
{% endblock %}

{% block spanElement %}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <div{{ knp_menu.attributes(item.labelAttributes) }}>
        <span class="helper"></span>
        <span class="text">{{ block('label') }}</span>
    </div>
{% endblock %}